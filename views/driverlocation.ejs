<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Plan your journey</title>
    <link rel="stylesheet" href="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.15.0/maps/maps.css">
    <style>
        h1 {
            color: black;
            padding: 15px;
            text-align: center;
        }

        h2 {
            color: white;
            background-color: black;
            padding: 15px;
            text-align: center;
        }

        body {
            padding: 0;
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
        }

        .topnav {
            overflow: hidden;
            background-color: black;
            margin-inline: 22px;
            margin-top: 2px;
        }

        .topnav a {
            float: left;
            color: silver;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
            font-size: 17px;
        }

        .topnav a.active {
            background-color: black;
            color: silver;
        }

        nav {
            display: flex;
            justify-content: space-around;
            background-color: black;
            color: silver;
        }

        nav .right {
            display: flex;
        }

        nav .left {
            display: flex;
        }

        .left img {
            margin-top: -11px;
            width: 100%;
        }

        .left p {
            margin-inline: 22px;
            margin-top: 21px;
        }

        .right a {
            margin-inline: 22px;
            margin-top: 21px;
        }

        .content {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 20px;
        }

        .container {
            width: 300px;
            padding: 20px 15px;
            background-color: silver;
            border-radius: 4px;
            box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);
            margin: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            font-weight: bold;
            display: block;
            margin-bottom: 5px;
        }

        input {
            height: 40px;
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        input:focus {
            border-color: blue;
            border-bottom-width: 2px;
        }

        button {
            width: 100%;
            background: none;
            font-size: 18px;
            font-weight: 500;
            background-color: black;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 15px;
            cursor: pointer;
            box-sizing: border-box;
        }

        .back-link {
            display: block;
            margin-top: 10px;
            color: black;
            text-decoration: none;
            text-align: center;
        }

        #map {
            height: 500px;
            flex: 1;
            margin: 20px;

        }

        .result-box ul {
            list-style-type: none;
            padding: 0;
        }

        .result-box li {
            padding: 5px;
            cursor: pointer;
        }

        .result-box li:hover {
            background-color: #f0f0f0;
        }
    </style>
</head>

<body>

    <div action="/driverLocation">
        <div class="nav">
            <img
                src="https://www.uber-assets.com/image/upload/f_auto,q_auto:eco,c_fill,w_84,h_84/v1618459257/assets/13/6bfdbd-cdb6-4221-92c1-cab1feaa39f3/original/Rider-App-logo.png">
        </div>
        <div class="left"></div>

        </nav>

        <div class="content">
            <div class="container">
                <form name="myform" id="routeForm" method="post">
                    <h2>Want a ride</h2>
                    <div class="form-group">
                        <input type="text" placeholder="enter current location location" id="pickupInput"
                            name="pickupCoordinates" required autocomplete="off"><br><br>

                        <button type="submit" id="submitButn">Submit</button>
                        <div class="result-box" id="pickupResultBox"></div>

                    </div>
                </form>
                <a class="back-link" href="/">Back</a>
            </div>
            <div id="map"></div>
        </div>

        <script src="/autosearch.js"></script>
        <script src="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.15.0/maps/maps-web.min.js"></script>
        <script src="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.15.0/services/services-web.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.7.2/axios.min.js"
            integrity="sha512-JSCFHhKDilTRRXe9ak/FJ28dcpOJxzQaCd3Xg8MyF6XFjODhy/YMCM8HW0TFDckNHWUewW+kfvhin43hKtJxAw=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script>
            const apiKey = "<%=TOMTOM_API_KEY%>"
            console.log(apiKey);
            const map = tt.map({
                key: apiKey,
                container: "map",
                center: [77.2090, 28.6139],
                zoom: 13,
            });

            let passengerMarker;

            function createMarker(coordinates, popupText) {
                console.log("createMarker");
                const element = document.createElement('div');
                element.innerHTML = `<img src='https://tse4.mm.bing.net/th?id=OIP.3erT-IGach1Mmd2LMfBfWQHaEf&pid=Api&P=0&h=180' style='width:30px;heigth=30px'>`
                const marker = new tt.Marker({ element: element }).setLngLat(coordinates);
                const popup = new tt.Popup({ offset: 30 }).setHTML(popupText);
                marker.setPopup(popup);
                marker.addTo(map);
                return marker;
            }

            let pickupCoordinates;

            document.getElementById('routeForm').addEventListener('submit', async function (event) {

                const pickupInput = document.getElementById('pickupInput').value;

                event.preventDefault();

                if (pickupInput && pickupCoordinates) return await sendLocation(pickupCoordinates)


                pickupCoordinates = await getCoordinates(pickupInput);

                console.log(pickupCoordinates, "pickup");

                console.log(123);

                map.flyTo({
                    center: pickupCoordinates,
                    essential: true
                });

                if (passengerMarker) {
                    passengerMarker.remove();
                }
                passengerMarker = createMarker(pickupCoordinates, "Pickup Location");





            });

            async function getCoordinates(location) {
                console.log(location);
                console.log(encodeURIComponent(location, "encode uri"));
                const response = await fetch(`https://api.tomtom.com/search/2/search/${encodeURIComponent(location)}.json?key=${apiKey}`);
                const data = await response.json();
                if (data.results && data.results.length > 0) {
                    return data.results[0].position;
                } else {
                    alert('Location not found');
                    throw new Error('Location not found');
                }
            }

            async function sendLocation(pickupCoordinates) {

                const button = document.getElementById('submitButn');

                const oldText = button.innerText

                button.innerText = 'Loading...'

                try {

                    const response = (await axios.post('/driverlocation', pickupCoordinates, { withCredentials: true })).data

                    console.log({ response });
                } catch (err) {
                    console.error(err);
                }

                button.innerText = oldText


                console.log({ pickupCoordinates });
            }

        </script>
    </div>
</body>